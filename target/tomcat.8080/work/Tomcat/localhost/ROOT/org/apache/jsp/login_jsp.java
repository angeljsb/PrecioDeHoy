/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.41
 * Generated at: 2021-05-24 02:26:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.SQLException;
import com.preciodehoy.preciodehoy.backend.TablaUsuario;
import com.preciodehoy.preciodehoy.backend.Usuario;
import com.preciodehoy.preciodehoy.backend.NoEncontradoException;
import com.preciodehoy.preciodehoy.backend.AdministradorRecursos;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.sql.SQLException");
    _jspx_imports_classes.add("com.preciodehoy.preciodehoy.backend.NoEncontradoException");
    _jspx_imports_classes.add("com.preciodehoy.preciodehoy.backend.Usuario");
    _jspx_imports_classes.add("com.preciodehoy.preciodehoy.backend.TablaUsuario");
    _jspx_imports_classes.add("com.preciodehoy.preciodehoy.backend.AdministradorRecursos");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "loghead.jsp", out, false);
      out.write("\r\n");
      out.write("        ");
      com.preciodehoy.preciodehoy.backend.Usuario user = null;
      synchronized (session) {
        user = (com.preciodehoy.preciodehoy.backend.Usuario) _jspx_page_context.getAttribute("user", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (user == null){
          user = new com.preciodehoy.preciodehoy.backend.Usuario();
          _jspx_page_context.setAttribute("user", user, javax.servlet.jsp.PageContext.SESSION_SCOPE);
        }
      }
      out.write("\r\n");
      out.write("        ");

            if(user.getId()>0){
                response.sendRedirect(AdministradorRecursos.HOME_PAGE);
            }
            
            boolean post = request.getMethod().equals("POST");
            String correo = "";
            String pass = "";
            boolean recordar = false;
            String campoError = "";
            
            if(post){
                correo = request.getParameter("correo");
                pass = request.getParameter("pass");
                recordar = request.getParameter("recordar")!=null;
                
                if(correo!=null && pass != null){
                    
                    try{
                        TablaUsuario tu = new TablaUsuario();
                        Usuario nuevo = tu.iniciarSeccion(correo, pass);
                        
      out.write("\r\n");
      out.write("        \r\n");
      out.write("        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.handleSetProperty(_jspx_page_context.findAttribute("user"), "id",
 nuevo.getId() );
      out.write("\r\n");
      out.write("        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.handleSetProperty(_jspx_page_context.findAttribute("user"), "nombre",
 nuevo.getNombre() );
      out.write("\r\n");
      out.write("        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.handleSetProperty(_jspx_page_context.findAttribute("user"), "authCode",
 nuevo.getAuthCode() );
      out.write("\r\n");
      out.write("        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.handleSetProperty(_jspx_page_context.findAttribute("user"), "correo",
 nuevo.getCorreo() );
      out.write("\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        ");

                        if(recordar){
                            Cookie userId = new Cookie("user_id", Integer.toString(nuevo.getId()));
                            Cookie code = new Cookie("auth_code", Integer.toString(nuevo.getAuthCode()));
                            userId.setMaxAge(60*60*24*365);
                            code.setMaxAge(60*60*24*365);
                            response.addCookie(userId);
                            response.addCookie(code);
                        }else{
                            Cookie[] cookies = request.getCookies();
                            if(cookies!=null)
                                for(Cookie cookie : cookies){
                                    if(cookie.getName().equals("user_id")
                                            ||cookie.getName().equals("auth_code")){
                                        cookie.setMaxAge(0);
                                    }
                                }
                        }
            
                        response.sendRedirect(AdministradorRecursos.HOME_PAGE);
                    }catch(NoEncontradoException ex){
                        campoError = ex.getCampoError();
                    }catch(SQLException ex){
                        System.out.println(ex.getLocalizedMessage());
                    }
                    
                }
            }
        
      out.write("\r\n");
      out.write("                <div class=\"ph-log__form\">\r\n");
      out.write("                    <form action=\"");
      out.print( AdministradorRecursos.INICIO_SECCION );
      out.write("\" method=\"POST\">\r\n");
      out.write("                    <div class=\"form-element\">\r\n");
      out.write("                    <input type=\"email\" \r\n");
      out.write("                           id=\"email\" \r\n");
      out.write("                           name=\"correo\" \r\n");
      out.write("                           class=\"ph-text-input ph-text-input--terciary\"\r\n");
      out.write("                           placeholder=\"Email\"\r\n");
      out.write("                           required\r\n");
      out.write("                    >\r\n");
      out.write("                    ");
 if(post && campoError.equals("correo")) {
      out.write("\r\n");
      out.write("                    <div class=\"error-message\">\r\n");
      out.write("                        El correo electronico no est√° registrado\r\n");
      out.write("                    </div>\r\n");
      out.write("                    ");
 } 
      out.write("\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"form-element\">\r\n");
      out.write("                    <input type=\"password\" \r\n");
      out.write("                           id=\"contrase√±a\" \r\n");
      out.write("                           name=\"pass\" \r\n");
      out.write("                           minlength=\"8\" \r\n");
      out.write("                           maxlength=\"50\" \r\n");
      out.write("                           class=\"ph-text-input ph-text-input--terciary\"\r\n");
      out.write("                           placeholder=\"Contrase√±a\"\r\n");
      out.write("                           required\r\n");
      out.write("                    >\r\n");
      out.write("                    ");
 if(post && campoError.equals("contrase√±a")) {
      out.write("\r\n");
      out.write("                    <div class=\"error-message\">\r\n");
      out.write("                        Error de contrase√±a\r\n");
      out.write("                    </div>\r\n");
      out.write("                    ");
 } 
      out.write("\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"form-element\">\r\n");
      out.write("                    <input type=\"checkbox\" id=\"recordar\" name=\"recordar\" >\r\n");
      out.write("                    <label for=\"recordar\">Recordar usuario</label>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"form-element ph-container--center-text\">\r\n");
      out.write("                        <input type=\"submit\" \r\n");
      out.write("                               id=\"submit-button\" \r\n");
      out.write("                               class=\"ph-button ph-button--basic\"\r\n");
      out.write("                        >\r\n");
      out.write("                    </div>\r\n");
      out.write("                </form>\r\n");
      out.write("                </div>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "logfoot.jsp", out, false);
      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
